-- MySQL Script generated by MySQL Workbench
-- Sat Sep  2 18:08:25 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
-- -----------------------------------------------------
-- Schema desafio_ecommerce_refined
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `desafio_ecommerce_refined` ;

-- -----------------------------------------------------
-- Schema desafio_ecommerce_refined
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `desafio_ecommerce_refined` DEFAULT CHARACTER SET utf8 ;
-- -----------------------------------------------------
-- Schema desafio_ecommerce_refined
-- -----------------------------------------------------
USE `desafio_ecommerce_refined` ;

-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`fornecedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`fornecedor` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`fornecedor` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `razao_social` VARCHAR(255) NOT NULL,
  `nome_fantasia` VARCHAR(45) NOT NULL,
  `cnpj` CHAR(14) NOT NULL,
  `contato` CHAR(11) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `cnpj_UNIQUE` (`cnpj` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`cliente`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`cliente` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`cliente` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `FName` VARCHAR(255) NOT NULL,
  `NInit` VARCHAR(45) NULL DEFAULT NULL,
  `LName` VARCHAR(255) NOT NULL,
  `cpf` CHAR(11) NOT NULL,
  `birthdate` DATE NOT NULL,
  `salvar_dados` ENUM("Sim", "Não") NOT NULL DEFAULT 'Não' COMMENT 'Salvar dados do cartão de crédito para pagamentos futuros?',
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`revendedor`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`revendedor` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`revendedor` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `nome_rsocial` VARCHAR(255) NULL DEFAULT NULL,
  `local` VARCHAR(45) NULL DEFAULT NULL,
  `apelido_nfantasia` VARCHAR(45) NULL DEFAULT NULL,
  `cnpj` CHAR(14) NULL DEFAULT NULL COMMENT 'Revendedor pode ser tanto pessoa física quanto jurídica. Campo default null e será tratado na aplicação ou via procedure/trigger para que um dos campos nulos seja preenchido',
  `cpf` CHAR(11) NULL DEFAULT NULL COMMENT 'Revendedor pode ser tanto pessoa física quanto jurídica. Campo default null e será tratado na aplicação ou via procedure/trigger para que um dos campos nulos seja preenchido',
  `limite_credito` FLOAT NULL,
  `desconto` FLOAT NULL,
  `salvar_dados` ENUM("Sim", "Não") NULL DEFAULT 'Não',
  PRIMARY KEY (`ID`),
  UNIQUE INDEX `cnpj_UNIQUE` (`cnpj` ASC) VISIBLE,
  UNIQUE INDEX `cpf_UNIQUE` (`cpf` ASC) VISIBLE,
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`endereco`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`endereco` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`endereco` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `cliente_ID` INT NULL DEFAULT NULL COMMENT 'dados de fornecedor, cliente e revendedor default null. Serão tratados na aplicação ou via procedure/trigger. Um deles precisa ser preeenchido e os demais permanecerão nulos.',
  `fornecedor_ID` INT NULL DEFAULT NULL COMMENT 'dados de fornecedor, cliente e revendedor default null. Serão tratados na aplicação ou via procedure/trigger. Um deles precisa ser preeenchido e os demais permanecerão nulos.',
  `revendedor_ID` INT NULL DEFAULT NULL,
  `tipo` ENUM("Entrega", "Faturamento", "Retirada") NOT NULL DEFAULT 'Faturamento',
  `logradouro` VARCHAR(255) NOT NULL,
  `numero` INT NOT NULL,
  `complemento` VARCHAR(45) NULL DEFAULT NULL,
  `bairro` VARCHAR(50) NOT NULL,
  `cidade` VARCHAR(45) NOT NULL,
  `estado` CHAR(2) NOT NULL,
  `país` VARCHAR(45) NOT NULL,
  `obs` VARCHAR(45) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_address_fornecedor1_idx` (`fornecedor_ID` ASC) VISIBLE,
  INDEX `fk_address_cliente1_idx` (`cliente_ID` ASC) VISIBLE,
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  UNIQUE INDEX `cliente_ID_UNIQUE` (`cliente_ID` ASC) VISIBLE,
  UNIQUE INDEX `fornecedor_ID_UNIQUE` (`fornecedor_ID` ASC) VISIBLE,
  INDEX `fk_endereco_revendedor1_idx` (`revendedor_ID` ASC) VISIBLE,
  CONSTRAINT `fk_address_fornecedor1`
    FOREIGN KEY (`fornecedor_ID`)
    REFERENCES `desafio_ecommerce_refined`.`fornecedor` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_address_cliente1`
    FOREIGN KEY (`cliente_ID`)
    REFERENCES `desafio_ecommerce_refined`.`cliente` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_endereco_revendedor1`
    FOREIGN KEY (`revendedor_ID`)
    REFERENCES `desafio_ecommerce_refined`.`revendedor` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`produto`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`produto` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`produto` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NomeProduto` VARCHAR(255) NULL DEFAULT NULL,
  `preco` FLOAT NOT NULL COMMENT 'Preço do produto',
  `classification_kids` ENUM("Sim", "Não") NOT NULL DEFAULT 'Não',
  `category` ENUM("Vestimentas", "Brinquedos", "Eletrônicos", "Alimentos") NOT NULL,
  `avaliacao` FLOAT NULL DEFAULT 0 COMMENT 'Estrelas que os clientes darão ao produto. Pode ser que na média seja float',
  `size` INT NULL DEFAULT NULL COMMENT 'Dimensão do produto',
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`pagamentos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`pagamentos` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`pagamentos` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `prazo_dias` INT NOT NULL DEFAULT 0 COMMENT 'Informe o número de dias para pagamento. Permitir em até 365 dias. Para pagamentos parcelados, separar os números de dias com vírgula',
  `tipo` ENUM("Cartão de crédito", "Transferência bancária", "PIX", "Boleto", "Dinheiro", "Bitcoin") NOT NULL DEFAULT 'Boleto',
  `descricao` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`transportadora`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`transportadora` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`transportadora` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NOT NULL,
  `descricao` VARCHAR(255) NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`frete`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`frete` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`frete` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `transportadora_ID` INT NOT NULL,
  `valor` FLOAT NOT NULL,
  `rastreio` VARCHAR(45) NULL COMMENT 'código de rastreio',
  `previsao_entrega` DATE NOT NULL,
  PRIMARY KEY (`ID`, `transportadora_ID`),
  INDEX `fk_frete_transportadoras1_idx` (`transportadora_ID` ASC) VISIBLE,
  CONSTRAINT `fk_frete_transportadoras1`
    FOREIGN KEY (`transportadora_ID`)
    REFERENCES `desafio_ecommerce_refined`.`transportadora` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`pedido`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`pedido` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`pedido` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `cliente_ID` INT NULL DEFAULT NULL COMMENT 'atributo será null default para ser tratado na aplicação',
  `revendedor_ID` INT NULL DEFAULT NULL COMMENT 'atributo será null default para ser tratado na aplicação',
  `pagamentos_ID` INT NOT NULL,
  `frete_ID` INT NOT NULL,
  `data` DATE NOT NULL,
  `status` ENUM("Em Processamento", "Cancelado", "Enviado") NOT NULL DEFAULT 'Em Processamento',
  `descricao` VARCHAR(255) NOT NULL,
  `valor_total` FLOAT NULL COMMENT 'soma total do pedido',
  `status_pagamento` ENUM("Aprovado", "Pendente", "Reprovado") NOT NULL DEFAULT 'Pendente',
  PRIMARY KEY (`ID`),
  INDEX `fk_pedido_cliente1_idx` (`cliente_ID` ASC) VISIBLE,
  INDEX `fk_pedido_payments1_idx` (`pagamentos_ID` ASC) VISIBLE,
  INDEX `fk_pedido_frete1_idx` (`frete_ID` ASC) VISIBLE,
  INDEX `fk_pedido_revendedor1_idx` (`revendedor_ID` ASC) VISIBLE,
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  CONSTRAINT `fk_pedido_cliente1`
    FOREIGN KEY (`cliente_ID`)
    REFERENCES `desafio_ecommerce_refined`.`cliente` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_payments1`
    FOREIGN KEY (`pagamentos_ID`)
    REFERENCES `desafio_ecommerce_refined`.`pagamentos` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_frete1`
    FOREIGN KEY (`frete_ID`)
    REFERENCES `desafio_ecommerce_refined`.`frete` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_pedido_revendedor1`
    FOREIGN KEY (`revendedor_ID`)
    REFERENCES `desafio_ecommerce_refined`.`revendedor` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`pedido_produtos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`pedido_produtos` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`pedido_produtos` (
  `pedido_ID` INT NOT NULL,
  `produto_ID` INT NOT NULL,
  `quantidade` INT NOT NULL,
  `preco` FLOAT NULL,
  PRIMARY KEY (`pedido_ID`, `produto_ID`),
  INDEX `fk_produto_has_pedido_pedido1_idx` (`pedido_ID` ASC) VISIBLE,
  INDEX `fk_produto_has_pedido_produto1_idx` (`produto_ID` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_pedido_produto1`
    FOREIGN KEY (`produto_ID`)
    REFERENCES `desafio_ecommerce_refined`.`produto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_pedido_pedido1`
    FOREIGN KEY (`pedido_ID`)
    REFERENCES `desafio_ecommerce_refined`.`pedido` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`estoque`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`estoque` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`estoque` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `local` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`estoque_produtos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`estoque_produtos` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`estoque_produtos` (
  `produto_ID` INT NOT NULL,
  `estoque_ID` INT NOT NULL,
  `quantidade` INT NOT NULL,
  PRIMARY KEY (`produto_ID`, `estoque_ID`),
  INDEX `fk_produto_has_estoque_estoque1_idx` (`estoque_ID` ASC) VISIBLE,
  INDEX `fk_produto_has_estoque_produto1_idx` (`produto_ID` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_estoque_produto1`
    FOREIGN KEY (`produto_ID`)
    REFERENCES `desafio_ecommerce_refined`.`produto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_estoque_estoque1`
    FOREIGN KEY (`estoque_ID`)
    REFERENCES `desafio_ecommerce_refined`.`estoque` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`fornecedor_produtos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`fornecedor_produtos` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`fornecedor_produtos` (
  `produto_ID` INT NOT NULL,
  `fornecedor_ID` INT NOT NULL,
  `observacoes` VARCHAR(255) NULL,
  PRIMARY KEY (`produto_ID`, `fornecedor_ID`),
  INDEX `fk_fornercedor_has_produto_produto1_idx` (`produto_ID` ASC) VISIBLE,
  INDEX `fk_fornercedor_has_produto_fornercedor1_idx` (`fornecedor_ID` ASC) VISIBLE,
  CONSTRAINT `fk_fornercedor_has_produto_fornercedor1`
    FOREIGN KEY (`fornecedor_ID`)
    REFERENCES `desafio_ecommerce_refined`.`fornecedor` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_fornercedor_has_produto_produto1`
    FOREIGN KEY (`produto_ID`)
    REFERENCES `desafio_ecommerce_refined`.`produto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`cartoes`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`cartoes` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`cartoes` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `cliente_ID` INT NULL DEFAULT NULL COMMENT 'tanto cliente como revendedor pode armazenar dados do cartão. Default null e será tratado na aplicação ou por meio de uma procedure/trigger',
  `revendedor_ID` INT NULL DEFAULT NULL COMMENT 'tanto cliente como revendedor pode armazenar dados do cartão. Default null e será tratado na aplicação ou por meio de uma procedure/trigger',
  `bandeira` ENUM("Mastercard", "Visa", "Elo", "Outras") NULL DEFAULT 'Visa',
  `numero` CHAR(16) NULL DEFAULT NULL,
  `vencimento` DATE NULL DEFAULT NULL,
  `cod_verificacao` CHAR(3) NULL DEFAULT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_cartoes_cliente1_idx` (`cliente_ID` ASC) VISIBLE,
  INDEX `fk_cartoes_revendedor1_idx` (`revendedor_ID` ASC) VISIBLE,
  UNIQUE INDEX `ID_UNIQUE` (`ID` ASC) VISIBLE,
  UNIQUE INDEX `cliente_ID_UNIQUE` (`cliente_ID` ASC) VISIBLE,
  UNIQUE INDEX `revendedor_ID_UNIQUE` (`revendedor_ID` ASC) VISIBLE,
  CONSTRAINT `fk_cartoes_cliente1`
    FOREIGN KEY (`cliente_ID`)
    REFERENCES `desafio_ecommerce_refined`.`cliente` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cartoes_revendedor1`
    FOREIGN KEY (`revendedor_ID`)
    REFERENCES `desafio_ecommerce_refined`.`revendedor` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`reposicao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`reposicao` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`reposicao` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `fornecedor_ID` INT NOT NULL,
  `pagamentos_ID` INT NOT NULL,
  `data` DATE NOT NULL,
  `status` ENUM("Em trânsito", "Entregue") NOT NULL DEFAULT 'Em trânsito',
  `descricao` VARCHAR(255) NULL DEFAULT NULL,
  `valor` FLOAT NULL,
  PRIMARY KEY (`ID`, `fornecedor_ID`),
  INDEX `fk_reposicao_fornecedor1_idx` (`fornecedor_ID` ASC) VISIBLE,
  INDEX `fk_reposicao_payments1_idx` (`pagamentos_ID` ASC) VISIBLE,
  CONSTRAINT `fk_reposicao_fornecedor1`
    FOREIGN KEY (`fornecedor_ID`)
    REFERENCES `desafio_ecommerce_refined`.`fornecedor` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reposicao_payments1`
    FOREIGN KEY (`pagamentos_ID`)
    REFERENCES `desafio_ecommerce_refined`.`pagamentos` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`reposicao_produtos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`reposicao_produtos` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`reposicao_produtos` (
  `reposicao_ID` INT NOT NULL,
  `produto_ID` INT NOT NULL,
  `quantidade` INT NOT NULL,
  `valor` FLOAT NOT NULL,
  PRIMARY KEY (`reposicao_ID`, `produto_ID`),
  INDEX `fk_reposicao_has_produto_produto1_idx` (`produto_ID` ASC) VISIBLE,
  INDEX `fk_reposicao_has_produto_reposicao1_idx` (`reposicao_ID` ASC) VISIBLE,
  CONSTRAINT `fk_reposicao_has_produto_reposicao1`
    FOREIGN KEY (`reposicao_ID`)
    REFERENCES `desafio_ecommerce_refined`.`reposicao` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_reposicao_has_produto_produto1`
    FOREIGN KEY (`produto_ID`)
    REFERENCES `desafio_ecommerce_refined`.`produto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`frete_enderecos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`frete_enderecos` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`frete_enderecos` (
  `frete_ID` INT NOT NULL,
  `endereco_ID` INT NOT NULL,
  PRIMARY KEY (`frete_ID`, `endereco_ID`),
  INDEX `fk_frete_has_address_address1_idx` (`endereco_ID` ASC) VISIBLE,
  INDEX `fk_frete_has_address_frete1_idx` (`frete_ID` ASC) VISIBLE,
  UNIQUE INDEX `frete_ID_UNIQUE` (`frete_ID` ASC) VISIBLE,
  UNIQUE INDEX `endereco_ID_UNIQUE` (`endereco_ID` ASC) VISIBLE,
  CONSTRAINT `fk_frete_has_address_frete1`
    FOREIGN KEY (`frete_ID`)
    REFERENCES `desafio_ecommerce_refined`.`frete` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_frete_has_address_address1`
    FOREIGN KEY (`endereco_ID`)
    REFERENCES `desafio_ecommerce_refined`.`endereco` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`avaliacao`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`avaliacao` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`avaliacao` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `cliente_ID` INT NULL,
  `revendedor_ID` INT NULL,
  PRIMARY KEY (`ID`),
  INDEX `fk_avaliacao_cliente1_idx` (`cliente_ID` ASC) VISIBLE,
  INDEX `fk_avaliacao_revendedor1_idx` (`revendedor_ID` ASC) VISIBLE,
  CONSTRAINT `fk_avaliacao_cliente1`
    FOREIGN KEY (`cliente_ID`)
    REFERENCES `desafio_ecommerce_refined`.`cliente` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_avaliacao_revendedor1`
    FOREIGN KEY (`revendedor_ID`)
    REFERENCES `desafio_ecommerce_refined`.`revendedor` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `desafio_ecommerce_refined`.`avaliacao_produtos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `desafio_ecommerce_refined`.`avaliacao_produtos` ;

CREATE TABLE IF NOT EXISTS `desafio_ecommerce_refined`.`avaliacao_produtos` (
  `produto_ID` INT NOT NULL,
  `avaliacao_ID` INT NOT NULL,
  `valor` FLOAT NOT NULL,
  `comentario` MEDIUMTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`produto_ID`, `avaliacao_ID`),
  INDEX `fk_produto_has_avaliacao_avaliacao1_idx` (`avaliacao_ID` ASC) VISIBLE,
  INDEX `fk_produto_has_avaliacao_produto1_idx` (`produto_ID` ASC) VISIBLE,
  CONSTRAINT `fk_produto_has_avaliacao_produto1`
    FOREIGN KEY (`produto_ID`)
    REFERENCES `desafio_ecommerce_refined`.`produto` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_produto_has_avaliacao_avaliacao1`
    FOREIGN KEY (`avaliacao_ID`)
    REFERENCES `desafio_ecommerce_refined`.`avaliacao` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
